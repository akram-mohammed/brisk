{
    "contents" : "#' @title Graph Vis 3D\n#' @author Brian Caffo\n#' @description function creates a graph based on roinames for graph < cutoff\n#' if the cutoff isn't specified it simply assumes a binary graph\n#' assumes that the values are put is as matrix[upper.tri[matrix]] of \n#' a data matrix where the column and row orders correspond to roiNames\n#' bend is how much the lines bend toward the origin (between 0 and 1)\n#' if it's input as a matrix, then it does this automatically\n#' @param graph a graph as a matrix or vector\n#' @param roiNames the character list of roiNames\n#' \ngraphVis3D <- function(graph, roiNames, cutoff = NULL, expansion = 1.2, bend = .5, lwd = 2, col = \"black\"){\n    if (is.matrix(graph)) graph <- graph[upper.tri(graph)]  \n    if (!is.null(cutoff)) graph <- (graph < cutoff) * 1\n     \n    roiCount <- length(roiNames)\n    idxs <- expand.grid(1 : roiCount, 1 : roiCount)\n    idxs <- idxs[idxs[,1] < idxs[,2],]\n    nonzero <- (1 : choose(roiCount, 2))[graph == 1]\n    \n    ##create the graph of labels\n    ##angle values in radians\n    angles <- seq(0, 2 * pi, length = roiCount + 1)[-(roiCount + 1)]\n    x <- cos(angles)\n    y <- sin(angles)\n    \n    open3d()\n    \n    for (i in 1 : length(x)){\n        text3d(x[i] * expansion, y[i] * expansion, 0, text = roiNames[i], cex = .75, srt = angles[i] * 180 / pi, add = TRUE)\n    }\n    \n    ##connect points with lines\n    for (i in 1 : length(nonzero)){\n        p <- unlist(idxs[nonzero[i],])\n        p0 <- c(x[p[1]], y[p[1]])\n        p1 <- c(x[p[2]], y[p[2]])\n        p2 <- bend * c(0, 0) + (1 - bend) * (.5 * p0 + .5 * p1)\n        \n        xvals <- c(p0[1], p1[1], p2[1])\n        yvals <- c(p0[2], p1[2], p2[2])\n        \n        tvals <- c(0, 1, .5)\n        t <- seq(0, 1, length = 100)\n        lines3d(predict(lm(xvals ~ tvals + I(tvals ^ 2)), newdata = data.frame(tvals = t)), \n                predict(lm(yvals ~ tvals + I(tvals ^ 2)), newdata = data.frame(tvals = t)),\n                z = 0,\n                lwd = lwd)               \n    }\n    spheres3d(x = x, y = y, z = 0, radius = .025, color = \"blue\", add = TRUE)\n    ##rotate it (easier than fixing the code to get the rotation I want)\n    par3d(userMatrix = rotationMatrix(pi/2, 0,0,1))\n    \n}\n",
    "created" : 1398885044577.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3699608834",
    "id" : "FA068173",
    "lastKnownWriteTime" : 1398885299,
    "path" : "~/GitHub/brisk/rsfmriGraph/R/graphVis3D.R",
    "project_path" : "R/graphVis3D.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}