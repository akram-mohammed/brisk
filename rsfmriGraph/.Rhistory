library(brisk)
?mean
?devices
?png
library(brisk)
?rsfmriGraphUtilityFunctions
?brisk
??brisk
?corCreate
library(brisk)
library(brisk)
?brisk
?corCreate
library(brisk)
?upper.tri
install.packages("misc3d")
install.packages("misc3d")
library(brisk)
gdLoc <- "/Users/Brian/Google Drive/"
dataDir <- paste(gdLoc, "Work/Research/Investigators/Kyrana/", sep = "")
controlDir <- paste(dataDir, "controls/", sep = "")
ppaDir <- paste(dataDir, "ppa/", sep = "")
roiLookUpTable <- read.csv("JhuMniSSTypeIILabelLookupTable_inslima_fewregions.csv", stringsAsFactors=FALSE)
roiLookUpTable <- read.csv("/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/JhuMniSSTypeIILabelLookupTable_inslima_fewregions.csv", stringsAsFactors=FALSE)
ofInterest <- roiLookUpTable$matrix.row
roiNames <- roiLookUpTable$roiShortName
roiCount <- nrow(roiLookUpTable)
roiNumbers <- roiLookUpTable$roiIndex
controls <- corCreate(fileList = dir(controlDir),
path = controlDir,
##read.delim works better than read.csv (it's not a csv file)
loadFunction = read.delim,
##this data set has ROIs on the rows and TR on the columns
transpose = TRUE,
what = "cor",
asMatrix = FALSE,
columns = ofInterest,
columnNames = roiNames,
##arguments to read.delim
header = FALSE, sep = "")
ppa <- corCreate(fileList = dir(ppaDir),
path = ppaDir,
##read.delim works better than read.csv (it's not a csv file)
loadFunction = read.delim,
##this data set has ROIs on the rows and TR on the columns
transpose = TRUE,
what = "cor",
asMatrix = FALSE,
columns = ofInterest,
columnNames = roiNames,
##arguments to read.delim
header = FALSE, sep = "")
load("longPairData.rda")
longPairData <- merge(longPairData, data.frame(id = c(names(ppa), names(controls))), by = "id")
##verify that the data is in the order of the data files
all(longPairData$id == c(names(ppa), names(controls)))
load("/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/longPairData.rda")
longPairData <- merge(longPairData, data.frame(id = c(names(ppa), names(controls))), by = "id")
##verify that the data is in the order of the data files
all(longPairData$id == c(names(ppa), names(controls)))
##now switch the order so that they agree
ppaShuffle <- order(longPairData$pair[longPairData$group == 1])
controlShuffle <- order(longPairData$pair[longPairData$group == 0])
ppa <- ppa[ppaShuffle]
controls <- controls[controlShuffle]
##convert the covariance
ppaMat <- t(sapply(ppa, cor2vec))
controlsMat <- t(sapply(controls, cor2vec))
library(brisk)
##convert the covariance
ppaMat <- t(sapply(ppa, cor2vec))
controlsMat <- t(sapply(controls, cor2vec))
?rsfmriGraphUtilityFunctions
library(brisk)
?cor2vec
library(brisk)
?cor2vec
##Analysis for Kyranna's submission
##getting the necessary code loaded in
#library(fmri)
#library(AnalyzeFMRI)
#library(rgl)
#library(misc3d)
#library(healthvis)
#library(parallel)
#library(perm.test)
#library(igraph)
# source('~/sandboxes/brisk/rsfmriGraph/R/graphVis.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/graphVis3D.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/graphVisSphere3D.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/templateBrainGraphVis.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/rsfmriGraphUtilityFunctions.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/d3ForceGraph.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/corCreate.R')
# source('~/sandboxes/brisk/rsfmriGraph/R/groupMatrixPermutationTest.R')
#gdLoc <- "c:/Users/bcaffo/Google Drive/"
gdLoc <- "/Users/Brian/Google Drive/"
dataDir <- paste(gdLoc, "Work/Research/Investigators/Kyrana/", sep = "")
controlDir <- paste(dataDir, "controls/", sep = "")
ppaDir <- paste(dataDir, "ppa/", sep = "")
roiLookUpTable <- read.csv("/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/JhuMniSSTypeIILabelLookupTable_inslima_fewregions.csv", stringsAsFactors=FALSE)
ofInterest <- roiLookUpTable$matrix.row
roiNames <- roiLookUpTable$roiShortName
roiCount <- nrow(roiLookUpTable)
roiNumbers <- roiLookUpTable$roiIndex
controls <- corCreate(fileList = dir(controlDir),
path = controlDir,
##read.delim works better than read.csv (it's not a csv file)
loadFunction = read.delim,
##this data set has ROIs on the rows and TR on the columns
transpose = TRUE,
what = "cor",
asMatrix = FALSE,
columns = ofInterest,
columnNames = roiNames,
##arguments to read.delim
header = FALSE, sep = "")
ppa <- corCreate(fileList = dir(ppaDir),
path = ppaDir,
##read.delim works better than read.csv (it's not a csv file)
loadFunction = read.delim,
##this data set has ROIs on the rows and TR on the columns
transpose = TRUE,
what = "cor",
asMatrix = FALSE,
columns = ofInterest,
columnNames = roiNames,
##arguments to read.delim
header = FALSE, sep = "")
##load the covariate data
load("/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/longPairData.rda")
longPairData <- merge(longPairData, data.frame(id = c(names(ppa), names(controls))), by = "id")
##verify that the data is in the order of the data files
all(longPairData$id == c(names(ppa), names(controls)))
##now switch the order so that they agree
ppaShuffle <- order(longPairData$pair[longPairData$group == 1])
controlShuffle <- order(longPairData$pair[longPairData$group == 0])
ppa <- ppa[ppaShuffle]
controls <- controls[controlShuffle]
##convert the covariance
ppaMat <- t(sapply(ppa, cor2vec))
controlsMat <- t(sapply(controls, cor2vec))
?cor2vec
cor2vec
library(brisk)
cor2vec
devtools::load_all(".")
##convert the covariance
ppaMat <- t(sapply(ppa, cor2vec))
controlsMat <- t(sapply(controls, cor2vec))
##fisher's z transformation of the difference
difference <- .5 * log((1 + ppaMat) / (1 - ppaMat)) - .5 * log((1 + controlsMat) / (1 - controlsMat))
ttestPvalue <- apply(difference, 2, function(x) t.test(x)$p.value)
ptestOut <- groupMatrixPermutationTest(ppaMat, controlsMat,
paired = TRUE,
cores = 1,
#                                       stat = function(x, y)
#                                         abs(t.test(fz(x) - fz(y))$statistic),
permutations = 1000)
permDist <- data.frame(AbsCorrDiff = ptestOut$permutationDistribution)
m <- ggplot(permDist, aes(x = AbsCorrDiff))
m + geom_density(size = 2, fill = "lightblue") + geom_vline(xintercept = max(ptestOut$observedStat), size = 2)
library(ggplot)
library(ggplot2)
permDist <- data.frame(AbsCorrDiff = ptestOut$permutationDistribution)
m <- ggplot(permDist, aes(x = AbsCorrDiff))
m + geom_density(size = 2, fill = "lightblue") + geom_vline(xintercept = max(ptestOut$observedStat), size = 2)
graphVis3D(ptestOut$pvalues, roiNames, .01, col = "darkblue", lwd = 2)
graphVis(ttestPvalue, roiNames, .01, col = "darkblue", lwd = 2)
devtools::load_all(".")
graphVis3D
graphVis3D(ptestOut$pvalues, roiNames, .01, col = "darkblue", lwd = 2)
roiImage <- f.read.analyze.volume(file= "JHU_MNI_SS_WMPM_TypeII_temp_insula_lima_a.img")[,,,1]
roiImage <- f.read.analyze.volume(file= "/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/JHU_MNI_SS_WMPM_TypeII_temp_insula_lima_a.img")[,,,1]
templateImage <- f.read.analyze.volume(file = "/Users/Brian/Google Drive/Work/Research/Investigators/Kyrana/Eva_T1.img")[,,,1]
templateBrainGraphVis(pvalues = ttestPvalue,
cutoff = .01,
templateImage = templateImage,
roiImage = roiImage,
roiNumbers = roiNumbers,
roiNames,
lwd = 2,
col = "lightblue")
